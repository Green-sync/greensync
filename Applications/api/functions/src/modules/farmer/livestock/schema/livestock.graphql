type Livestock {
    livestockId: ID!
    farmId: ID!
    userId: ID!
    type: String!
    quantity: Int!
    healthStatus: String!
    location: String!
    dateCreated: String!
}
input LivestockInput {
   farmId: ID
   userId: ID
   type: String!
   quantity: Int!
   healthStatus: String!
   location: String!
   dateCreated: String!
}
type LivestockRresponse {
 success: Boolean
 message: String
}
extend type Query {
   getStock: LivestockRresponse
   getLivestock: Livestock
   getAllLivestock: [Livestock]
}

extend type  Mutation {
   createLivestock(stock: LivestockInput): LivestockRresponse
   updateLivestock(livestockId: ID!,updatestock: LivestockInput): LivestockRresponse
   deleteLivestock(livestockId: ID!): LivestockRresponse
}
