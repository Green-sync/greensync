input weatherDataInput {
    weatherDataId: ID
    userId: ID
    farmId: ID
    date: String
    temperature: Float
    humidity: Float
    rainfall: Float
    windSpeed: Float
}

type WeatherData {
    weatherDataId: ID
    userId: ID
    farmId: ID
    date: String
    temperature: Float
    humidity: Float
    rainfall: Float
    windSpeed: Float
}


type WeatheResponse {
    success: Boolean
    message: String
}
extend type Query {
    getWeather: [WeatherData] 
    getWeatherByUserId(userId: ID!): [WeatherData]
}

extend type Mutation {
    createWeather(weather: weatherDataInput): WeatheResponse
    editWeather(weatherId: ID, updates: weatherDataInput): WeatheResponse
    deleteWeather(weatherId: ID!): WeatheResponse
}