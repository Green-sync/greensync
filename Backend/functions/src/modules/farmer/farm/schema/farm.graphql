"""
Farmer Type Definitions 
"""
type Farm {
    farmId: ID!
    userId: ID!
    user: User!
    name: String!
    location: Location!
    size: Float!
    unit: Unit!
    description: String
    dateCreated: String!
    crops: [Crop!]!
    livestocks: [Livestock!]!
     weatherData: [WeatherData!]!
     
     }

     """ WeatherData Types """ 
  type WeatherData {
    weatherDataId: ID!
    userId: ID!
    farmId: ID!
    farm: Farm!
    date: String!
    temperature: Float!
    humidity: Float!
    rainfall: Float!
    windSpeed: Float!
  }
  
  enum Unit {
    HECTARES
    ACRES
  }
  
  type Location {
    latitude: Float!
    longitude: Float!
  }

input FarmInput {
    farmId: ID
    userId: ID
    name: String
    location: String
    size: Float!
    description: String
    dateCreated: String
}



type FarmResponse {
    success: Boolean
    message: String
}
extend type Query {
    getFarm: [Farm]
}

extend type Mutation {
    createFarm(farm: FarmInput): FarmResponse
}



